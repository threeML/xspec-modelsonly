name: CI
on:
    push:
        paths-ignore:
            - "README.md"
    pull_request:

jobs:
    skip_duplicate:
        runs-on: ubuntu-latest
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@master
              with:
                  github_token: ${{ github.token }}
                  concurrent_skipping: never
                  skip_after_successful_duplicate: true
                  paths_ignore: '["**/README.md", "**/docs/**"]'
                  do_not_skip: '["pull_request",  "schedule"]'

    build-conda:
        name: Build in Conda
        if: startsWith(github.event.ref, 'refs/tags') == false
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-20.04, macos-10.15]
                python-version: [3.9]

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Cache conda
              uses: actions/cache@v1
              with:
                  path: ~/conda_pkgs_dir
                  key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('environment-ci.yml') }}
            - name: Add conda ${{ matrix.python-version }} to system path
              uses: conda-incubator/setup-miniconda@v2
              with:
                  activate-environment: "test_env"
                  auto-activate-base: false
                  mamba-version: "*"
                  architecture: "x64"
                  #conda-build-version: 3.20.2
                  python-version: ${{ matrix.python-version }}
                  auto-update-conda: true
                  environment-file: ci/environment.yml
                  channels: conda-forge
            - name: Get file
              shell: bash -l {0}
              run: |
                  echo "HOME= ${HOME}"
                  echo "Python version: ${{matrix.python-version}}"
                  echo "======> getting the file..."
                  if ! [ -f heasoft-6.30.1src.tar.gz ]; then
                      curl -LO -z heasoft-6.30.1src.tar.gz https://www.dropbox.com/s/sv6ge6libcxfvas/heasoft-6.30.1src.tar.gz
                  fi

            - name: Build the Distribution
              shell: bash -l {0}
              run: |
                  # Build package
                  
                  conda install -c conda-forge boa -n base

                  if [[ "${{matrix.os}}" == "ubuntu-latest" ]]; then
                  conda mambabuild --no-build-id --python=${{matrix.python-version}} conda_recipe/xspec-modelsonly

                  else
                  # there is some strange error about the prefix length
                  conda mambabuild --no-build-id --python=${{matrix.python-version}} conda_recipe/xspec-modelsonly
                  fi
            
            - name: Intall the Package
              shell: bash -l {0}
              run: |
                  conda install --use-local -c conda-forge xspec-modelsonly
                  echo "======> dependency list..."
                  conda search xspec-modelsonly=6.30.1 --use-local --info

    publish-conda:
        name: Publish to Conda
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-20.04, macos-10.15]
                python-version: [3.9]

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Cache conda
              uses: actions/cache@v1
              with:
                  path: ~/conda_pkgs_dir
                  key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('environment-ci.yml') }}
            - name: Add conda ${{ matrix.python-version }} to system path
              uses: conda-incubator/setup-miniconda@v2
              with:
                  activate-environment: "test_env"
                  auto-activate-base: false
                  mamba-version: "*"
                  architecture: "x64"
                  #conda-build-version: 3.20.2
                  python-version: ${{ matrix.python-version }}
                  auto-update-conda: true
                  environment-file: ci/environment.yml
                  channels: conda-forge

            - name: Get file
              shell: bash -l {0}
              run: |
                  echo "HOME= ${HOME}"
                  echo "Python version: ${{matrix.python-version}}"
                  echo "======> getting the file..."
                  if ! [ -f heasoft-6.30.1src.tar.gz ]; then
                      curl -LO -z heasoft-6.30.1src.tar.gz https://www.dropbox.com/s/sv6ge6libcxfvas/heasoft-6.30.1src.tar.gz
                  fi

            - name: Build the Distribution
              shell: bash -l {0}
              run: |
                  # Build package
                  
                  conda install -c conda-forge boa -n base

                  if [[ "${{matrix.os}}" == "ubuntu-latest" ]]; then
                  conda mambabuild --no-build-id --python=${{matrix.python-version}} conda_recipe/xspec-modelsonly

                  else
                  # there is some strange error about the prefix length
                  conda mambabuild --no-build-id --python=${{matrix.python-version}} conda_recipe/xspec-modelsonly
                  fi

            - name: Publish to Conda
              shell: bash -l {0}
              run: |

                conda install -c conda-forge anaconda-client
                echo "Uploading ${CONDA_BUILD_PATH}"
            
                if [[ "$CURRENT_OS" == "ubuntu_latest" ]]; then

                anaconda -q --show-traceback -t $UPLOAD_TOKEN upload -u xspecmodels /usr/share/miniconda/conda-bld/linux-64/*.tar.bz2 --force

                else

                anaconda -q --show-traceback -t $UPLOAD_TOKEN upload -u xspecmodels /usr/local/miniconda/conda-bld/osx-64/*.tar.bz2 --force

                fi

              env:
                UPLOAD_TOKEN: secrets.CONDA_UPLOAD_TOKEN
                CURRENT_OS: ${{matrix.os}}
